|pedaleira
clk => i2c_master:i2c_inst.clk
clk => i2s_receiver:i2s_inst.clk
clk => wm8731_control:wm8731_inst.clk
reset => i2c_master:i2c_inst.reset
reset => i2s_receiver:i2s_inst.reset
reset => wm8731_control:wm8731_inst.reset
sda <> i2c_master:i2c_inst.sda
scl <= i2c_master:i2c_inst.scl
bclk => i2s_receiver:i2s_inst.bclk
wclk => i2s_receiver:i2s_inst.wclk
sdata => i2s_receiver:i2s_inst.sdata
audio_data[0] <= i2s_receiver:i2s_inst.audio_data[0]
audio_data[1] <= i2s_receiver:i2s_inst.audio_data[1]
audio_data[2] <= i2s_receiver:i2s_inst.audio_data[2]
audio_data[3] <= i2s_receiver:i2s_inst.audio_data[3]
audio_data[4] <= i2s_receiver:i2s_inst.audio_data[4]
audio_data[5] <= i2s_receiver:i2s_inst.audio_data[5]
audio_data[6] <= i2s_receiver:i2s_inst.audio_data[6]
audio_data[7] <= i2s_receiver:i2s_inst.audio_data[7]
audio_data[8] <= i2s_receiver:i2s_inst.audio_data[8]
audio_data[9] <= i2s_receiver:i2s_inst.audio_data[9]
audio_data[10] <= i2s_receiver:i2s_inst.audio_data[10]
audio_data[11] <= i2s_receiver:i2s_inst.audio_data[11]
audio_data[12] <= i2s_receiver:i2s_inst.audio_data[12]
audio_data[13] <= i2s_receiver:i2s_inst.audio_data[13]
audio_data[14] <= i2s_receiver:i2s_inst.audio_data[14]
audio_data[15] <= i2s_receiver:i2s_inst.audio_data[15]
data_valid <= i2s_receiver:i2s_inst.data_valid


|pedaleira|i2c_master:i2c_inst
clk => received_ack.CLK
clk => scl_internal.CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => bit_counter[0].CLK
clk => bit_counter[1].CLK
clk => bit_counter[2].CLK
clk => bit_counter[3].CLK
clk => sda_internal.CLK
clk => state~3.DATAIN
reset => state~5.DATAIN
reset => received_ack.ENA
reset => sda_internal.ENA
reset => bit_counter[3].ENA
reset => bit_counter[2].ENA
reset => bit_counter[1].ENA
reset => bit_counter[0].ENA
reset => shift_reg[8].ENA
reset => shift_reg[7].ENA
reset => shift_reg[6].ENA
reset => shift_reg[5].ENA
reset => shift_reg[4].ENA
reset => shift_reg[3].ENA
reset => shift_reg[2].ENA
reset => shift_reg[1].ENA
reset => shift_reg[0].ENA
reset => scl_internal.ENA
sda <> sda
scl <= scl.DB_MAX_OUTPUT_PORT_TYPE
i2c_start => state.OUTPUTSELECT
i2c_start => state.OUTPUTSELECT
i2c_start => state.OUTPUTSELECT
i2c_start => state.OUTPUTSELECT
i2c_start => state.OUTPUTSELECT
i2c_start => state.OUTPUTSELECT
i2c_start => state.OUTPUTSELECT
i2c_start => state.OUTPUTSELECT
i2c_stop => state.OUTPUTSELECT
i2c_stop => state.OUTPUTSELECT
i2c_stop => state.OUTPUTSELECT
i2c_stop => bit_counter.OUTPUTSELECT
i2c_stop => bit_counter.OUTPUTSELECT
i2c_stop => bit_counter.OUTPUTSELECT
i2c_stop => bit_counter.OUTPUTSELECT
i2c_stop => shift_reg.OUTPUTSELECT
i2c_stop => shift_reg.OUTPUTSELECT
i2c_stop => shift_reg.OUTPUTSELECT
i2c_stop => shift_reg.OUTPUTSELECT
i2c_stop => shift_reg.OUTPUTSELECT
i2c_stop => shift_reg.OUTPUTSELECT
i2c_stop => shift_reg.OUTPUTSELECT
i2c_stop => shift_reg.OUTPUTSELECT
i2c_stop => Selector2.IN6
i2c_read => state.DATAA
i2c_read => bit_counter.OUTPUTSELECT
i2c_read => bit_counter.OUTPUTSELECT
i2c_read => bit_counter.OUTPUTSELECT
i2c_read => bit_counter.OUTPUTSELECT
i2c_read => state.DATAA
i2c_write => state.OUTPUTSELECT
i2c_write => state.OUTPUTSELECT
i2c_write => state.DATAA
i2c_write => bit_counter.OUTPUTSELECT
i2c_write => bit_counter.OUTPUTSELECT
i2c_write => bit_counter.OUTPUTSELECT
i2c_write => bit_counter.OUTPUTSELECT
i2c_write => shift_reg.OUTPUTSELECT
i2c_write => shift_reg.OUTPUTSELECT
i2c_write => shift_reg.OUTPUTSELECT
i2c_write => shift_reg.OUTPUTSELECT
i2c_write => shift_reg.OUTPUTSELECT
i2c_write => shift_reg.OUTPUTSELECT
i2c_write => shift_reg.OUTPUTSELECT
i2c_write => shift_reg.OUTPUTSELECT
data_in[0] => shift_reg.DATAB
data_in[0] => Selector21.IN3
data_in[1] => shift_reg.DATAB
data_in[1] => Selector20.IN3
data_in[2] => shift_reg.DATAB
data_in[2] => Selector19.IN3
data_in[3] => shift_reg.DATAB
data_in[3] => Selector18.IN3
data_in[4] => shift_reg.DATAB
data_in[4] => Selector17.IN3
data_in[5] => shift_reg.DATAB
data_in[5] => Selector16.IN3
data_in[6] => shift_reg.DATAB
data_in[6] => Selector15.IN3
data_in[7] => shift_reg.DATAB
data_in[7] => Selector14.IN3
data_out[0] <= shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= shift_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= shift_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= shift_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= shift_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= shift_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= shift_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= shift_reg[7].DB_MAX_OUTPUT_PORT_TYPE
ack <= received_ack.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy.DB_MAX_OUTPUT_PORT_TYPE


|pedaleira|i2s_receiver:i2s_inst
clk => audio_data[0]~reg0.CLK
clk => audio_data[1]~reg0.CLK
clk => audio_data[2]~reg0.CLK
clk => audio_data[3]~reg0.CLK
clk => audio_data[4]~reg0.CLK
clk => audio_data[5]~reg0.CLK
clk => audio_data[6]~reg0.CLK
clk => audio_data[7]~reg0.CLK
clk => audio_data[8]~reg0.CLK
clk => audio_data[9]~reg0.CLK
clk => audio_data[10]~reg0.CLK
clk => audio_data[11]~reg0.CLK
clk => audio_data[12]~reg0.CLK
clk => audio_data[13]~reg0.CLK
clk => audio_data[14]~reg0.CLK
clk => audio_data[15]~reg0.CLK
clk => last_wclk.CLK
clk => sampling_edge.CLK
clk => data_valid~reg0.CLK
clk => bit_counter[0].CLK
clk => bit_counter[1].CLK
clk => bit_counter[2].CLK
clk => bit_counter[3].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => shift_reg[9].CLK
clk => shift_reg[10].CLK
clk => shift_reg[11].CLK
clk => shift_reg[12].CLK
clk => shift_reg[13].CLK
clk => shift_reg[14].CLK
clk => shift_reg[15].CLK
reset => data_valid~reg0.ACLR
reset => bit_counter[0].ACLR
reset => bit_counter[1].ACLR
reset => bit_counter[2].ACLR
reset => bit_counter[3].ACLR
reset => shift_reg[0].ACLR
reset => shift_reg[1].ACLR
reset => shift_reg[2].ACLR
reset => shift_reg[3].ACLR
reset => shift_reg[4].ACLR
reset => shift_reg[5].ACLR
reset => shift_reg[6].ACLR
reset => shift_reg[7].ACLR
reset => shift_reg[8].ACLR
reset => shift_reg[9].ACLR
reset => shift_reg[10].ACLR
reset => shift_reg[11].ACLR
reset => shift_reg[12].ACLR
reset => shift_reg[13].ACLR
reset => shift_reg[14].ACLR
reset => shift_reg[15].ACLR
reset => audio_data[0]~reg0.ENA
reset => sampling_edge.ENA
reset => last_wclk.ENA
reset => audio_data[15]~reg0.ENA
reset => audio_data[14]~reg0.ENA
reset => audio_data[13]~reg0.ENA
reset => audio_data[12]~reg0.ENA
reset => audio_data[11]~reg0.ENA
reset => audio_data[10]~reg0.ENA
reset => audio_data[9]~reg0.ENA
reset => audio_data[8]~reg0.ENA
reset => audio_data[7]~reg0.ENA
reset => audio_data[6]~reg0.ENA
reset => audio_data[5]~reg0.ENA
reset => audio_data[4]~reg0.ENA
reset => audio_data[3]~reg0.ENA
reset => audio_data[2]~reg0.ENA
reset => audio_data[1]~reg0.ENA
bclk => ~NO_FANOUT~
wclk => sampling_edge.IN1
wclk => last_wclk.DATAIN
sdata => shift_reg[0].DATAIN
audio_data[0] <= audio_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[1] <= audio_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[2] <= audio_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[3] <= audio_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[4] <= audio_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[5] <= audio_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[6] <= audio_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[7] <= audio_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[8] <= audio_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[9] <= audio_data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[10] <= audio_data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[11] <= audio_data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[12] <= audio_data[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[13] <= audio_data[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[14] <= audio_data[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
audio_data[15] <= audio_data[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_valid <= data_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE


|pedaleira|wm8731_control:wm8731_inst
clk => config_index[0].CLK
clk => config_index[1].CLK
clk => config_index[2].CLK
clk => config_index[3].CLK
clk => config_index[4].CLK
clk => config_index[5].CLK
clk => config_index[6].CLK
clk => config_index[7].CLK
clk => config_index[8].CLK
clk => config_index[9].CLK
clk => config_index[10].CLK
clk => config_index[11].CLK
clk => config_index[12].CLK
clk => config_index[13].CLK
clk => config_index[14].CLK
clk => config_index[15].CLK
clk => config_index[16].CLK
clk => config_index[17].CLK
clk => config_index[18].CLK
clk => config_index[19].CLK
clk => config_index[20].CLK
clk => config_index[21].CLK
clk => config_index[22].CLK
clk => config_index[23].CLK
clk => config_index[24].CLK
clk => config_index[25].CLK
clk => config_index[26].CLK
clk => config_index[27].CLK
clk => config_index[28].CLK
clk => config_index[29].CLK
clk => config_index[30].CLK
clk => config_index[31].CLK
clk => i2c_write~reg0.CLK
clk => i2c_start~reg0.CLK
clk => config_data[0].CLK
clk => config_data[1].CLK
clk => config_data[2].CLK
clk => config_data[3].CLK
clk => config_data[4].CLK
clk => config_data[5].CLK
clk => config_data[6].CLK
clk => config_data[7].CLK
clk => state~4.DATAIN
reset => state~6.DATAIN
reset => config_index[0].ENA
reset => config_data[7].ENA
reset => config_data[6].ENA
reset => config_data[5].ENA
reset => config_data[4].ENA
reset => config_data[3].ENA
reset => config_data[2].ENA
reset => config_data[1].ENA
reset => config_data[0].ENA
reset => i2c_start~reg0.ENA
reset => i2c_write~reg0.ENA
reset => config_index[31].ENA
reset => config_index[30].ENA
reset => config_index[29].ENA
reset => config_index[28].ENA
reset => config_index[27].ENA
reset => config_index[26].ENA
reset => config_index[25].ENA
reset => config_index[24].ENA
reset => config_index[23].ENA
reset => config_index[22].ENA
reset => config_index[21].ENA
reset => config_index[20].ENA
reset => config_index[19].ENA
reset => config_index[18].ENA
reset => config_index[17].ENA
reset => config_index[16].ENA
reset => config_index[15].ENA
reset => config_index[14].ENA
reset => config_index[13].ENA
reset => config_index[12].ENA
reset => config_index[11].ENA
reset => config_index[10].ENA
reset => config_index[9].ENA
reset => config_index[8].ENA
reset => config_index[7].ENA
reset => config_index[6].ENA
reset => config_index[5].ENA
reset => config_index[4].ENA
reset => config_index[3].ENA
reset => config_index[2].ENA
reset => config_index[1].ENA
i2c_start <= i2c_start~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_stop <= i2c_stop.DB_MAX_OUTPUT_PORT_TYPE
i2c_write <= i2c_write~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] <= config_data[0].DB_MAX_OUTPUT_PORT_TYPE
data_in[1] <= config_data[1].DB_MAX_OUTPUT_PORT_TYPE
data_in[2] <= config_data[2].DB_MAX_OUTPUT_PORT_TYPE
data_in[3] <= config_data[3].DB_MAX_OUTPUT_PORT_TYPE
data_in[4] <= config_data[4].DB_MAX_OUTPUT_PORT_TYPE
data_in[5] <= config_data[5].DB_MAX_OUTPUT_PORT_TYPE
data_in[6] <= config_data[6].DB_MAX_OUTPUT_PORT_TYPE
data_in[7] <= config_data[7].DB_MAX_OUTPUT_PORT_TYPE
busy => process_0.IN0
busy => i2c_stop.IN0
ack => i2c_stop.IN1
ack => process_0.IN1


